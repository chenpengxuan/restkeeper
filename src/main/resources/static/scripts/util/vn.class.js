define(function(require, exports, module) {var $ = require('jquery');var vn = window.vn = {};vn.uuid = '__VN__';vn.lang = vn.lang || {};window[vn.uuid] = window[vn.uuid] || {};(function(noop) {    vn.log = window.console ?    function(obj) {        return window.console.log(obj)    }: noop;    vn.warn = window.console ?    function(obj) {        return window.console.warn(obj)    }: noop;    vn.info = window.console ?    function(obj) {        return window.console.info(obj)    }: noop;})(function() {});(function() {    //不直接使用window，可以提高3倍左右性能    var uuid = window[vn.uuid];    vn.lang.uuid = function() {        return "VN_" + (uuid._counter++).toString(36);    };    uuid._counter = uuid._counter || 1;})();window[vn.uuid]._instances = window[vn.uuid]._instances || {};vn.lang.Class = function(uuid) {    this.uuid = uuid || vn.lang.uuid();    window[vn.uuid]._instances[this.uuid] = this;};vn.lang.Class.prototype.dispose = function() {    delete window[vn.uuid]._instances[this.uuid];    for (var property in this) {        if (!vn.lang.isFunction(this[property])) {            delete this[property];        }    }    this.disposed = true;};vn.lang.Class.prototype.toString = function() {    return "[vn object " + (this._className || "Object") + "]";};vn.lang.isString = function(source) {    return '[object String]' == Object.prototype.toString.call(source);};vn.isString = vn.lang.isString;vn.lang.isFunction = $.isFunction;vn.lang.Event = function(type, target) {    this.type = type;    this.returnValue = true;    this.target = target || null;    this.currentTarget = null;};vn.lang.Class.prototype.addEventListener = function(type, handler, key) {    if (!vn.lang.isFunction(handler)) {        return;    }    ! this.__listeners && (this.__listeners = {});    var t = this.__listeners,    id;    if (typeof key == "string" && key) {        if (/[^\w\-]/.test(key)) {            throw ("nonstandard key:" + key);        } else {            handler.hashCode = key;            id = key;        }    }    type.indexOf("on") != 0 && (type = "on" + type);    typeof t[type] != "object" && (t[type] = {});    id = id || vn.lang.uuid();    handler.hashCode = id;    t[type][id] = handler;};vn.lang.Class.prototype.removeEventListener = function(type, handler) {    if (typeof handler != "undefined") {        if ((vn.lang.isFunction(handler) && !(handler = handler.hashCode))        || (!vn.lang.isString(handler))) {            return;        }    }    ! this.__listeners && (this.__listeners = {});    type.indexOf("on") != 0 && (type = "on" + type);    var t = this.__listeners;    if (!t[type]) {        return;    }    if (typeof handler != "undefined") {        t[type][handler] && delete t[type][handler];    } else {        for (var uuid in t[type]) {            delete t[type][uuid];        }    }};vn.lang.Class.prototype.dispatchEvent = function(event, options) {    if (vn.lang.isString(event)) {        event = new vn.lang.Event(event);    }    ! this.__listeners && (this.__listeners = {});    // 20100603 添加本方法的第二个参数，将 options extend到event中去传递    options = options || {};    for (var i in options) {        event[i] = options[i];    }    var i,    t = this.__listeners,    p = event.type;    event.target = event.target || this;    event.currentTarget = this;    p.indexOf("on") != 0 && (p = "on" + p);    vn.lang.isFunction(this[p]) && this[p].apply(this, arguments);    if (typeof t[p] == "object") {        for (i in t[p]) {            t[p][i].apply(this, arguments);        }    }    return event.returnValue;};vn.lang.createClass =/**@function*/function(constructor, options) {    options = options || {};    var superClass = options.superClass || vn.lang.Class;    var fn = function() {        if (superClass != vn.lang.Class) {            superClass.apply(this, arguments);        } else {            superClass.call(this);        }        constructor.apply(this, arguments);    };    fn.options = options.options || {};    var C = function() {},    cp = constructor.prototype;    C.prototype = superClass.prototype;    var fp = fn.prototype = new C();    for (var i in cp) {        fp[i] = cp[i];    }    typeof options.className == "string" && (fp._className = options.className);    fp.constructor = cp.constructor;    fn.extend = function(json) {        for (var i in json) {            fn.prototype[i] = json[i];        }        return fn;    };    return fn;};vn.object = vn.object || {};vn.extend = vn.object.extend = function(target, source) {    for (var p in source) {        if (source.hasOwnProperty(p)) {            target[p] = source[p];        }    }    return target;};vn.object.keys = function(source) {    var result = [],    resultLen = 0,    k;    for (k in source) {        if (source.hasOwnProperty(k)) {            result[resultLen++] = k;        }    }    return result;};vn.array = vn.array || {};vn.array.filter = function(source, iterator, thisObject) {    var result = [],    resultIndex = 0,    len = source.length,    item,    i;    if ('function' == typeof iterator) {        for (i = 0; i < len; i++) {            item = source[i];            //和标准不符，see array.each            if (true === iterator.call(thisObject || source, item, i)) {                // resultIndex用于优化对result.length的多次读取                result[resultIndex++] = item;            }        }    }    return result;};vn.fn = vn.fn || {};vn.fn.blank = function() {};vn.fn.bind = function(func, scope) {    var xargs = arguments.length > 2 ? [].slice.call(arguments, 2) : null;    return function() {        var fn = vn.lang.isString(func) ? scope[func] : func,        args = (xargs) ? xargs.concat([].slice.call(arguments, 0)) : arguments;        return fn.apply(scope || fn, args);    };};vn.number = vn.number || {};vn.number.isNumberic = function(num) {    return ! isNaN(parseFloat(num)) && isFinite(num);}vn.string = vn.string || {};(function() {    var trimer = new RegExp("(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+\x24)", "g");    vn.string.trim = function(source) {        return String(source).replace(trimer, "");    }})();vn.trim = vn.string.trim;vn.string.format = function(source, opts) {    source = String(source);    var data = Array.prototype.slice.call(arguments, 1),    toString = Object.prototype.toString;    if (data.length) {        data = data.length == 1 ?        /* ie 下 Object.prototype.toString.call(null) == '[object Object]' */        (opts !== null && (/\[object Array\]|\[object Object\]/.test(toString.call(opts))) ? opts: data)        : data;        return source.replace(/#\{(.+?)\}/g,        function(match, key) {            var replacer = data[key];            // chrome 下 typeof /a/ == 'function'            if ('[object Function]' == toString.call(replacer)) {                replacer = replacer(key);            }            return ('undefined' == typeof replacer ? '': replacer);        });    }    return source;};(function() {    vn.dateParse = function(source) {        var reg = new RegExp("^\\d+(\\-|\\/)\\d+(\\-|\\/)\\d+\x24");        if ('string' == typeof source) {            if (reg.test(source) || isNaN(Date.parse(source))) {                var d = source.split(/ |T/),                d1 = d.length > 1 ? d[1].split(/[^\d]/) : [0, 0, 0],                d0 = d[0].split(/[^\d]/);                return new Date(d0[0] - 0, d0[1] - 1, d0[2] - 0, d1[0] - 0, d1[1] - 0, d1[2] - 0);            } else {                return new Date(source);            }        }        return new Date();    }})();vn.BigNumber = function(n, p, r) {    var o = this,    i;    if (n instanceof vn.BigNumber) {        for (i in {            precision: 0,            roundType: 0,            _s: 0,            _f: 0        }) o[i] = n[i];        o._d = n._d.slice();        return;    }    o.precision = isNaN(p = Math.abs(p)) ? vn.BigNumber.defaultPrecision: p;    o.roundType = isNaN(r = Math.abs(r)) ? vn.BigNumber.defaultRoundType: r;    o._s = (n += "").charAt(0) == "-";    o._f = ((n = n.replace(/[^\d.]/g, "").split(".", 2))[0] = n[0].replace(/^0+/, "") || "0").length;    for (i = (n = o._d = (n.join("") || "0").split("")).length; i; n[--i] = +n[i]);    o.round();};with({    $: vn.BigNumber,    o: vn.BigNumber.prototype}) {    $.ROUND_HALF_EVEN = ($.ROUND_HALF_DOWN = ($.ROUND_HALF_UP = ($.ROUND_FLOOR = ($.ROUND_CEIL = ($.ROUND_DOWN = ($.ROUND_UP = 0) + 1) + 1) + 1) + 1) + 1) + 1;    $.defaultPrecision = 40;    $.defaultRoundType = $.ROUND_HALF_UP;    o.add = function(n) {        if (this._s != (n = new vn.BigNumber(n))._s) return n._s ^= 1,        this.subtract(n);        var o = new vn.BigNumber(this),        a = o._d,        b = n._d,        la = o._f,        lb = n._f,        n = Math.max(la, lb),        i,        r;        la != lb && ((lb = la - lb) > 0 ? o._zeroes(b, lb, 1) : o._zeroes(a, -lb, 1));        i = (la = a.length) == (lb = b.length) ? a.length: ((lb = la - lb) > 0 ? o._zeroes(b, lb) : o._zeroes(a, -lb)).length;        for (r = 0; i; r = (a[--i] = a[i] + b[i] + r) / 10 >>> 0, a[i] %= 10);        return r && ++n && a.unshift(r),        o._f = n,        o.round();    };    o.subtract = function(n) {        if (this._s != (n = new vn.BigNumber(n))._s) return n._s ^= 1,        this.add(n);        var o = new vn.BigNumber(this),        c = o.abs().compare(n.abs()) + 1,        a = c ? o: n,        b = c ? n: o,        la = a._f,        lb = b._f,        d = la,        i,        j;        a = a._d,        b = b._d,        la != lb && ((lb = la - lb) > 0 ? o._zeroes(b, lb, 1) : o._zeroes(a, -lb, 1));        for (i = (la = a.length) == (lb = b.length) ? a.length: ((lb = la - lb) > 0 ? o._zeroes(b, lb) : o._zeroes(a, -lb)).length; i;) {            if (a[--i] < b[i]) {                for (j = i; j && !a[--j]; a[j] = 9);                --a[j],                a[i] += 10;            }            b[i] = a[i] - b[i];        }        return c || (o._s ^= 1),        o._f = d,        o._d = b,        o.round();    };    o.multiply = function(n) {        var o = new vn.BigNumber(this),        r = o._d.length >= (n = new vn.BigNumber(n))._d.length,        a = (r ? o: n)._d,        b = (r ? n: o)._d,        la = a.length,        lb = b.length,        x = new vn.BigNumber,        i,        j,        s;        for (i = lb; i; r && s.unshift(r), x.set(x.add(new vn.BigNumber(s.join("")))))        for (s = (new Array(lb - --i)).join("0").split(""), r = 0, j = la; j; r += a[--j] * b[i], s.unshift(r % 10), r = (r / 10) >>> 0);        return o._s = o._s != n._s,        o._f = ((r = la + lb - o._f - n._f) >= (j = (o._d = x._d).length) ? this._zeroes(o._d, r - j + 1, 1).length: j) - r,        o.round();    };    o.divide = function(n) {        if ((n = new vn.BigNumber(n)) == "0") throw new Error("Division by 0");        else if (this == "0") return new vn.BigNumber;        var o = new vn.BigNumber(this),        a = o._d,        b = n._d,        la = a.length - o._f,        lb = b.length - n._f,        r = new vn.BigNumber,        i = 0,        j,        s,        l,        f = 1,        c = 0,        e = 0;        r._s = o._s != n._s,        r.precision = Math.max(o.precision, n.precision),        r._f = +r._d.pop(),        la != lb && o._zeroes(la > lb ? b: a, Math.abs(la - lb));        n._f = b.length,        b = n,        b._s = false,        b = b.round();        for (n = new vn.BigNumber; a[0] == "0"; a.shift());        out: do {            for (l = c = 0, n == "0" && (n._d = [], n._f = 0); i < a.length && n.compare(b) == -1; ++i) {                (l = i + 1 == a.length, (!f && ++c > 1 || (e = l && n == "0" && a[i] == "0"))) && (r._f == r._d.length && ++r._f, r._d.push(0));                (a[i] == "0" && n == "0") || (n._d.push(a[i]), ++n._f);                if (e) break out;                if ((l && n.compare(b) == -1 && (r._f == r._d.length && ++r._f, 1)) || (l = 0)) while (r._d.push(0), n._d.push(0), ++n._f, n.compare(b) == -1);            }            if (f = 0, n.compare(b) == -1 && !(l = 0)) while (l ? r._d.push(0) : l = 1, n._d.push(0), ++n._f, n.compare(b) == -1);            for (s = new vn.BigNumber, j = 0; n.compare(y = s.add(b)) + 1 && ++j; s.set(y));            n.set(n.subtract(s)), !l && r._f == r._d.length && ++r._f, r._d.push(j);        }        while (( i < a . length || n != "0") && (r._d.length - r._f) <= r.precision);        return r.round();    };    o.mod = function(n) {        return this.subtract(this.divide(n).intPart().multiply(n));    };    o.pow = function(n) {        var o = new vn.BigNumber(this),        i;        if ((n = (new vn.BigNumber(n)).intPart()) == 0) return o.set(1);        for (i = Math.abs(n); --i; o.set(o.multiply(this)));        return n < 0 ? o.set((new vn.BigNumber(1)).divide(o)) : o;    };    o.set = function(n) {        return this.constructor(n),        this;    };    o.compare = function(n) {        var a = this,        la = this._f,        b = new vn.BigNumber(n),        lb = b._f,        r = [ - 1, 1],        i,        l;        if (a._s != b._s) return a._s ? -1 : 1;        if (la != lb) return r[(la > lb) ^ a._s];        for (la = (a = a._d).length, lb = (b = b._d).length, i = -1, l = Math.min(la, lb); ++i < l;)        if (a[i] != b[i]) return r[(a[i] > b[i]) ^ a._s];        return la != lb ? r[(la > lb) ^ a._s] : 0;    };    o.negate = function() {        var n = new vn.BigNumber(this);        return n._s ^= 1,        n;    };    o.abs = function() {        var n = new vn.BigNumber(this);        return n._s = 0,        n;    };    o.intPart = function() {        return new vn.BigNumber((this._s ? "-": "") + (this._d.slice(0, this._f).join("") || "0"));    };    o.valueOf = o.toString = function() {        var o = this;        return (o._s ? "-": "") + (o._d.slice(0, o._f).join("") || "0") + (o._f != o._d.length ? "." + o._d.slice(o._f).join("") : "");    };    o._zeroes = function(n, l, t) {        var s = ["push", "unshift"][t || 0];        for (++l; --l; n[s](0));        return n;    };    o.round = function() {        if ("_rounding" in this) return this;        var $ = vn.BigNumber,        r = this.roundType,        b = this._d,        d, p, n, x;        for (this._rounding = true; this._f > 1 && !b[0]; --this._f, b.shift());        for (d = this._f, p = this.precision + d, n = b[p]; b.length > d && !b[b.length - 1]; b.pop());        x = (this._s ? "-": "") + (p - d ? "0." + this._zeroes([], p - d - 1).join("") : "") + 1;        if (b.length > p) {            n && (r == $.DOWN ? false: r == $.UP ? true: r == $.CEIL ? !this._s: r == $.FLOOR ? this._s: r == $.HALF_UP ? n >= 5 : r == $.HALF_DOWN ? n > 5 : r == $.HALF_EVEN ? n >= 5 && b[p - 1] & 1 : false) && this.add(x);            b.splice(p, b.length - p);        }        return delete this._rounding,        this;    };}// 暴露对应接口  module.exports = vn;});